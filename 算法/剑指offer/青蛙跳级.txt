- 一只青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。求该青蛙跳上一个n级的台阶总共有多少种跳法。
```
public class Solution {
    public int JumpFloorII(int target) {
        return JumpFloorIILight(target);
        //f(n) =  f(n - 1) + f(n - 2) + ... + f(n - n + 1) + (f(n - n) = 1);
    }
    public int JumpFloor(int  target) {
        if(target <= 0) {
            return 0;
        }
        int result = 1;
        for(int i = 1; i < target; i++) {
            result *= 2;
        }
        return result;
    }
    //位运算 在计算机里面 效率会更高
    //计算 2 的倍数的时候
    public int JumpFloorIILight(int target) {
        if(target <= 0) {
            return 0;
        }
        return 1<<(target - 1);
    }
}
```
- 可以找到规律，如果规定青蛙只能跳1，2级 则就是一个斐波拉契数列。
- 当需要进行2的幂运算的时候可以 直接用位运算 '<<' 左移  即二进制 的最高位想左移 就是在原来的二进制数基础上乘以2 
